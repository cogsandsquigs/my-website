---
import GradientText from "$components/GradientText.astro";

interface Props {
    // Command to "execute"
    command: string;

    // Duration per key, in seconds
    keyDuration?: number;

    // Delay, in seconds
    delay?: number;
}

const { command, keyDuration = 0.12, delay = 0 } = Astro.props;
---

<div class="flex flex-col">
    <div class="command flex flex-row items-start space-x-2 font-mono">
        <p>
            
            <span class="font-bold text-sky-500">
                
                <span class="ml-2">
                    <GradientText>cogsandsquigs</GradientText>
                </span> ~{Astro.url.pathname}
            </span>
            on
            <span class="text-emerald-400">  main ❯ </span>
        </p>
        <p class="typewriter">{command}</p>
    </div>

    <div class="command-output">
        <slot />
    </div>
</div>

<style
    define:vars={{
        "text-len": command.length,
        "key-duration": keyDuration,
        delay,
    }}
>
    .command {
        visibility: hidden;
        max-height: 0;
        animation: reveal 1s ease 0s step-end;
    }

    .typewriter {
        /* 
        * NOTE: Since we need these two variables for the calculation of the iteration value for the 
        * blink animation, we make them unitless (they are both in seconds).
        * Yes, this *is* a pain to deal with later.
        */

        --blink-duration: 0.5;
        --duration: calc(var(--key-duration) * var(--text-len));

        width: 0;
        overflow: hidden; /* Ensures the content is not revealed until the animation */
        border-right: 0.15em solid transparent; /* The typwriter cursor */
        white-space: nowrap; /* Keeps the content on a single line */
        margin: 0 auto; /* Gives that scrolling effect as the typing happens */
        /* letter-spacing: 0.15em; /* Adjust as needed */
        animation:
            typing calc(var(--duration) * 1s) steps(var(--text-len), end)
                calc(var(--delay) * 1s) forwards,
            blink-caret calc(var(--blink-duration) * 1s) step-end
                calc(var(--delay) * 1s)
                calc(round(up, var(--duration) / var(--blink-duration)));
    }

    @media (prefers-reduced-motion) {
        .typewriter {
            width: min-content;
            /* letter-spacing: 0.15em; /* Adjust as needed */
            animation: none;
        }
    }

    /* The typing effect */
    @keyframes typing {
        from {
            width: 0;
        }
        to {
            width: calc(var(--text-len) * 1ch);
        }
    }

    /* The typewriter cursor effect */
    @keyframes blink-caret {
        from,
        to {
            border-color: transparent;
        }
        50% {
            border-color: var(--color-primary);
        }
    }

    @keyframes reveal {
        from {
            visibility: hidden;
            max-height: 0;
        }

        from {
            visibility: visible;
            max-height: none;
        }
    }
</style>
